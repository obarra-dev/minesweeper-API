// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	dto "minesweeper-API/models/dto"

	mock "github.com/stretchr/testify/mock"
)

// Game is an autogenerated mock type for the Game type
type Game struct {
	mock.Mock
}

// Create provides a mock function with given fields: rows, columns, mineAmount
func (_m *Game) Create(rows int, columns int, mineAmount int) (int, error) {
	ret := _m.Called(rows, columns, mineAmount)

	var r0 int
	if rf, ok := ret.Get(0).(func(int, int, int) int); ok {
		r0 = rf(rows, columns, mineAmount)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int, int) error); ok {
		r1 = rf(rows, columns, mineAmount)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: id
func (_m *Game) Get(id int) (*dto.GetGameResponse, error) {
	ret := _m.Called(id)

	var r0 *dto.GetGameResponse
	if rf, ok := ret.Get(0).(func(int) *dto.GetGameResponse); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.GetGameResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Play provides a mock function with given fields: id, playRequest
func (_m *Game) Play(id int, playRequest dto.PlayRequest) (*dto.PlayResponse, error) {
	ret := _m.Called(id, playRequest)

	var r0 *dto.PlayResponse
	if rf, ok := ret.Get(0).(func(int, dto.PlayRequest) *dto.PlayResponse); ok {
		r0 = rf(id, playRequest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.PlayResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, dto.PlayRequest) error); ok {
		r1 = rf(id, playRequest)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
